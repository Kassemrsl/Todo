@page "/register"

@using Todo.OnlineTaskManagement.BlazorApp.Application.Gateways
@using Todo.OnlineTaskManagement.Shared.Requests

@inject IAuthGateway gateway

@inject NavigationManager Navigation

<EditForm Model="Model" OnSubmit="OnSubmit">
    <DataAnnotationsValidator />
    <div class="col-md-5">
        <label for="inputFirstName" class="form-label">First Name</label>
        <InputText @bind-Value="@Model.FirstName" type="text" class="form-control" id="inputFirstName"></InputText>
    </div>
    <div class="col-md-5 mt-4">
        <label for="inputLastName" class="form-label">Last Name</label>
        <InputText @bind-Value="@Model.LastName" type="text" class="form-control" id="inputLastName"></InputText>
    </div>
    <div class="col-md-5 mt-4">
        <label for="inputEmail4" class="form-label">Email</label>
        <InputText @bind-Value="@Model.Email" type="email" class="form-control " id="inputEmail4"></InputText>
    </div>
    <div class="col-md-5 mt-4">
        <label for="inputPassword4" class="form-label">Password</label>
        <InputText @bind-Value="@Model.Password" type="password" class="form-control" id="inputPassword4"></InputText>

    </div>
    <div class="col-md-5 mt-4">
        <label for="inputPassword5" class="form-label">Confirm Password</label>
        <InputText @bind-Value="@Model.ConfirmPassword" type="password" class="form-control" id="inputPassword5"></InputText>
    </div>
    <div class="col-md-5 mt-4">
        <button type="submit" class="btn btn-primary">Sign Up</button>
    </div>
</EditForm>

@code {

    private RegistrationDto? Model { get; set; }

    private string _errorList = string.Empty;

    protected override async Task OnInitializedAsync() => Model ??= new();

    private async Task OnSubmit()
    {
        Model.Username = Model.Email;

        var result = await gateway.RegisterAsync(Model);

        if (result.Succeeded)
        {
            Navigation.NavigateTo("/login", true);
        }
        else
        {
            _errorList = result.ErrorList;
        }
    }
}
